name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
      
    - name: Cache uv
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-
    
    - name: Install dependencies
      run: uv sync --all-extras
      
    - name: Format check
      run: uv run ruff format --check .
      
    - name: Lint
      run: uv run ruff check .
      
    - name: Type check (if mypy available)
      run: |
        if uv run python -c "import mypy" 2>/dev/null; then
          uv run mypy .
        else
          echo "MyPy not available, skipping type check"
        fi
      continue-on-error: true
      
    - name: Test installation
      run: make test-install
      
    - name: Run unit tests
      run: make test-unit
      continue-on-error: true
      
    - name: Run integration tests
      run: make test-integration  
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Set up Python
      run: uv python install 3.12
      
    - name: Build package
      run: |
        uv build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/